using System;
using System.Threading.Tasks;
using bot.Entity;
using System.Globalization;
using Telegram.Bot;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;
namespace bot{
    public partial class Handlers{
         private async Task BotOnMessageReceived(ITelegramBotClient client, Message message)
        {  if ( message.Location != null)
            {
                var lon = message.Location.Longitude;
                var lat = message.Location.Latitude;
                var user = await _storage.GetUserAsync(message.Chat.Id);
                user.Longitude = lon;
                user.Latitude = lat;
                await _storage.UpdateUserAsync(user);

                var result = await _cache.GetOrUpdatePrayerTimeAsync(user.ChatId, user.Longitude, user.Latitude);
                var times = result.prayerTime;
                await client.SendTextMessageAsync(
                    chatId: message.Chat.Id,
                    text:
 @$"                   
Bomdod : {times.Fajr}
Quyosh Chiqishi : {times.Sunrise}
Peshin : {times.Dhuhr}
Asr : {times.Asr}
Shom : {times.Maghrib}
Hufton : {times.Isha}
Yarim tun : {times.Midnight}
Asosiy Manba : {times.CalculationMethod}",
parseMode: ParseMode.Default

);}

            if(!await _storage.ExistsAsync(message.Chat.Id))
            {
                var user = new BotUser(
                    chatId: message.Chat.Id,
                    username: message.From.Username,
                    fullname: $"{message.From.FirstName} {message.From.LastName}",
                    longitude:0.0,
                    latitude:0.0,
                    address: "");

                if(!(await _storage.InsertUserAsync(user)).IsSuccess)
                {
                    throw new Exception($"Could not add a new user to DB. CHAT ID: {user.ChatId}");
                }
            }

            
            
            
            switch (message.Text)
            {
                case "/start":
                 
                    await client.SendTextMessageAsync(
                        chatId: message.Chat.Id,
                        parseMode: ParseMode.Markdown,
                        text: "Assalomu Alaykum iltimos bo't bilan muloqot tilini tanlang.\nüó£üí¨üëáüëá\n" +
                        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –æ–±—â–µ–Ω–∏—è —Å –±–æ—Ç–æ–º.\nüó£üí¨üëáüëá  ",
                        replyMarkup: MessageBuilder.Greeting());
                    await client.DeleteMessageAsync(
                        chatId: message.Chat.Id,
                        messageId: message.MessageId);
                    break;

                 case "Namoz Vaqtlari üìç .":
                    await client.DeleteMessageAsync(
                        chatId: message.Chat.Id,
                        messageId: message.MessageId);
                    break;

                    case "Orqagaüîô":
                    await client.SendTextMessageAsync(
                       chatId: message.Chat.Id,
                       parseMode: ParseMode.Markdown,
                       text: "Iltimos kerakli Menyuni tanlang‚úÖ",
                       replyMarkup: MessageBuilder.menu());
                    await client.DeleteMessageAsync(
                        chatId: message.Chat.Id,
                        messageId: message.MessageId);
                    break;


                case "Asma-ul-Husna ‚ò™Ô∏èüíü":
                    await client.SendTextMessageAsync(
                      chatId: message.Chat.Id,
                      parseMode: ParseMode.Markdown,
                      text: "Siz bu yerda Allohning go'zal ismlarini va Ularning manosini yodlab olishingiz mumkun..üòçüòç",
                      replyMarkup:MessageBuilder.Asosiy()
                      );
                 
                    await client.DeleteMessageAsync(
                        chatId: message.Chat.Id,
                        messageId: message.MessageId);
                    break;
                    
                case "Foydali Kanallar üîó":
                    await client.SendTextMessageAsync(
                      chatId: message.Chat.Id,
                      parseMode: ParseMode.Markdown,
                      text: "Quyidagi linklar Zamonamizning mashhur ulamolari va"+
                      "\n ularnign darslari tarqatiladigan kanallarga olib o'tadi ‚¨áÔ∏è ‚¨áÔ∏è",
                      replyMarkup: MessageBuilder.SendLinks());
                    await client.DeleteMessageAsync(
                        chatId: message.Chat.Id,
                        messageId: message.MessageId);
                    break;
     
                case "Hijriy kalendar üóìüïå":
                     DateTime today =  DateTime.Now;
                     DateTime myDT2 = new DateTime( today.Year, today.Month,today.Day, new GregorianCalendar() );
                     HijriCalendar myCal2 = new HijriCalendar(); 

                    await client.SendTextMessageAsync(
                      chatId: message.Chat.Id,
                      text:
@$"                         
Yil: { myCal2.GetYear( myDT2 ) }
Oy: { myCal2.GetMonth( myDT2 )} 
Kun: { myCal2.GetDayOfMonth( myDT2 )} 
Hafta kuni: { myCal2.GetDayOfWeek( myDT2 ) }"                   
                      
                     );
                    await client.DeleteMessageAsync(
                        chatId: message.Chat.Id,
                        messageId: message.MessageId);
                    break;
                case "Tuzatishlar ‚öôÔ∏è":
                    await client.SendTextMessageAsync(
                      chatId: message.Chat.Id,
                      parseMode: ParseMode.Markdown,
                      text: "Iltimos kerakli Menyuni tanlang‚úÖ",
                      replyMarkup: MessageBuilder.Greeting2());
                    await client.DeleteMessageAsync(
                        chatId: message.Chat.Id,
                        messageId: message.MessageId);
                    break;


                case "–í—Ä–µ–º—è –º–æ–ª–∏—Ç–≤.üìç ":
                    await client.DeleteMessageAsync(
                        chatId: message.Chat.Id,
                        messageId: message.MessageId);
                    break;

                     case "–ù–∞–∑–∞–¥üîô":
                    await client.SendTextMessageAsync(
                      chatId: message.Chat.Id,
                      parseMode: ParseMode.Markdown,
                      text: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º –º–µ–Ω—é.‚úÖ",
                      replyMarkup:MessageBuilder.menurus()
                      );
                 
                    await client.DeleteMessageAsync(
                        chatId: message.Chat.Id,
                        messageId: message.MessageId);
                    break;

                case "–ê—Å–º–∞-–£–ª—å-–•—É—Å–Ω–∞ ‚ò™Ô∏èüíü":
                    await client.SendTextMessageAsync(
                      chatId: message.Chat.Id,
                      parseMode: ParseMode.Markdown,
                      text: "–í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∏–º—ë–Ω –≤—Å–µ–≤—ã—à–Ω–µ–≥–æ –ê–ª–ª–∞—Ö–∞.üòçüòç",
                      replyMarkup:MessageBuilder.Asosiyru()
                      );
                    await client.DeleteMessageAsync(
                        chatId: message.Chat.Id,
                        messageId: message.MessageId);
                    break;
                case "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–∞–Ω–∞–ª—ã üîó":
                    await client.SendTextMessageAsync(
                      chatId: message.Chat.Id, 
                      parseMode: ParseMode.Markdown,
                      text: "–í–Ω–∏–∑—É –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å—Å—ã–ª–∫–∏ –ø–æ–ª–µ–∑–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏. ‚¨áÔ∏è‚¨áÔ∏è",
                      replyMarkup: MessageBuilder.SendLinksru()) ;
                    await client.DeleteMessageAsync(
                        chatId: message.Chat.Id,
                        messageId: message.MessageId);
                    break;
                     case "–ò—Å–ª–∞–º—Å–∫–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä—åüóìüïå":
                   
                    DateTime todayru =  DateTime.Now;
                     DateTime myDTru = new DateTime( todayru.Year, todayru.Month,todayru.Day, new GregorianCalendar() );
                     HijriCalendar myCalru= new HijriCalendar(); 

                    await client.SendTextMessageAsync(
                      chatId: message.Chat.Id,
                      text:
@$"                         
–ì–æ–¥:{ myCalru.GetYear( myDTru ) }
–ú–µ—Å—è—Ü:{ myCalru.GetMonth( myDTru )} 
–î–µ–Ω—å –º–µ—Å—è—Ü–∞:{ myCalru.GetDayOfMonth( myDTru )} 
–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏:{ myCalru.GetDayOfWeek( myDTru) }"                   
                      
                    );
                    await client.DeleteMessageAsync(
                        chatId: message.Chat.Id,
                        messageId: message.MessageId);
                    break;
               
                    case "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è":
                    await client.SendTextMessageAsync(
                      chatId: message.Chat.Id,
                      parseMode: ParseMode.Markdown,
                      text: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –≤–∞–º –º–µ–Ω—é.‚úÖ",
                      replyMarkup: MessageBuilder.Greeting2ru());
                    await client.DeleteMessageAsync(
                        chatId: message.Chat.Id,
                        messageId: message.MessageId);
                    break;
            }
        }
    }
}
    
